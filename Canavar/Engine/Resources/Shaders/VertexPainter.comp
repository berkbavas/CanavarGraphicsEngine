#version 450 core

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

struct Vertex
{
    vec4 position;
    vec4 normal;
    vec4 textureCoords;
    vec4 tangent;
    vec4 bitangent;
    vec4 color;
};

layout(std430, binding = 0) buffer VertexBuffer
{
    Vertex vertex[];
};

struct Brush
{
    float radius;
    vec3 center;
    vec4 color;
};

uniform Brush brush;

void main()
{
    const uint index = gl_GlobalInvocationID.x;

    float distance = length(brush.center - vertex[index].position.xyz);

    if (distance < brush.radius)
    {
        vertex[index].color = brush.color;
    }
}